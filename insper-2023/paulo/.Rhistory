"Karina Ferreira",
"Graziela França",
"Géssica Brandino",
"Paulo Talarico",
"Karina Custódio",
"Géssica Brandino",
"Graziela França",
"Karina Custódio",
"Géssica Brandino",
"Ingrid Fernandes",
"Paulo Talarico",
"Natalia",
"Graziela França",
"Erico",
"Karina Ferreira",
"Natalia",
"Graziela França",
"Sérgio",
"Graziela França"
)
a <- c(
"Graziela França",
"Natali",
"Karina Custódio",
"Géssica Brandino",
"Karina Ferreira",
"Graziela França",
"Géssica Brandino",
"Paulo Talarico",
"Karina Custódio",
"Géssica Brandino",
"Graziela França",
"Karina Custódio",
"Géssica Brandino",
"Ingrid Fernandes",
"Paulo Talarico",
"Natalia",
"Graziela França",
"Erico",
"Karina Ferreira",
"Natalia",
"Graziela França",
"Sérgio",
"Graziela França"
)
unique(a)
length(unique(a))
library(tidyverse)
library(extrafont)
n <- seq(20, 100, 20)
vertices2d <- n * n
vertices3d <- n * n * n
data <- data.frame(n, vertices2d, vertices3d)
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point()
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point() +
geom_path()
ggplot(data,
aes(x = n,
y = vertices3d)
) +
geom_point() +
geom_path()
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point() +
geom_path()
data_grouped <- data %>%
gather(vertices2d, vertices3d, key = "type", value = "vertices")
View(data)
View(data_grouped)
ggplot(data_grouped, aes(x = n, y = vertices, color = type)) + geom_path()
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point()
ggsave("2d.pgn", plot = last_plot())
ggsave("2d.png", plot = last_plot())
ggplot(data,
aes(x = n,
y = vertices3d)
) +
geom_point()
ggsave("3d.png", plot = last_plot())
pwd()
getwd()
ggplot(data,
aes(x = n,
y = vertices3d)
) +
geom_point() +
labs(title = 'Number of vertices - 3D grid')
ggsave("3d.png", plot = last_plot())
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point() +
labs(title = 'Number of vertices - 2D grid')
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point(size = 3) +
labs(title = 'Number of vertices - 2D grid')
ggsave("2d.png", plot = last_plot())
ggplot(data,
aes(x = n,
y = vertices3d)
) +
geom_point(size = 3) +
labs(title = 'Number of vertices - 3D grid')
ggsave("3d.png", plot = last_plot())
ggplot(data,
aes(x = n,
y = vertices3d)
) +
geom_point(size = 3) +
labs(title = 'Number of vertices - 3D grid', y = 'N')
ggsave("3d.png", plot = last_plot())
ggplot(data,
aes(x = n,
y = vertices2d)
) +
geom_point(size = 3) +
labs(title = 'Number of vertices - 2D grid', y = 'N')
ggsave("2d.png", plot = last_plot())
getwd()
setwd()
install.packages("here")
here::i_am()
here::i_am("generate-geojson.R")
setwd("~/Documents/GitHub/classes/insper-2023/paulo")
library(tidyverse)
library(sf)
library(geojsonsf)
library(rmapshaper)
library(geobr)
# dados daqui:
# http://dados.prefeitura.sp.gov.br/pt_PT/dataset/distritos/resource/9e75c2f7-5729-4398-8a83-b4640f072b5d
sp <- sf::read_sf('LAYER_DISTRITO')
simple_sp <- rmapshaper::ms_simplify(sp)
sp_wgs84 <- sf::st_transform(simple_sp, 4326)
ggplot(sp_wgs84) + geom_sf()
geobr::lookup_muni("São Paulo
")
geobr::lookup_muni("São Paulo")
geobr::lookup_muni("Sao Paulo")
mun_sp <- geobr::read_municipality(3550308)
ggplot(sp_wgs84) + geom_sf() + geom_sf(data = mun_sp, color = "blue")
ggplot(sp_wgs84) + geom_sf() + geom_sf(data = mun_sp, color = "blue", fill = "transparent")
mun_sp_geo <- geojsonsf::sf_geojson(sp_wgs84, simplify = TRUE, digits = 6)
output <- list(
distritos = sp_geo,
fronteira = mun_sp_geo
)
sp_geo <- geojsonsf::sf_geojson(sp_wgs84, simplify = TRUE, digits = 6)
output <- list(
distritos = sp_geo,
fronteira = mun_sp_geo
)
write_files(output, 'dados_.json')
write_file(output, 'dados_.json')
jsonlite::write_json(output, "output.json")
simples_mun_sp <- rmapshaper::ms_simplify(mun_sp)
ggplot(sp_wgs84) + geom_sf() + geom_sf(data = simples_mun_sp, color = "blue", fill = "transparent")
mun_sp <- geobr::read_municipality(3550308)
mun_sp_geo <- geojsonsf::sf_geojson(sp_wgs84, simplify = TRUE, digits = 6)
write_file(mun_sp_geo, 'dados_municipio.json')
write_file(sp_geo, 'dados_distritos.json')
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
cars
mpg
mpg %>% filter(year == 2008)
m <- mpg
View(m)
starwars
ggplot(starwars) +
geom_point(aes(
x = height,
y = name,
size = species
))
ggplot(starwars[1:5]) +
geom_point(aes(
x = height,
y = name,
size = species
))
starwars[1:5]
ggplot(starwars[1:5,]) +
geom_point(aes(
x = height,
y = name,
size = species
))
ggplot(starwars[1:5,]) +
geom_point(aes(
x = height,
y = name,
size = species
)) +
labs(
x = "Height (cm)",
y = NULL
)
ggplot(starwars[1:5,]) +
geom_point(aes(
x = height,
y = name,
size = species
)) +
labs(
x = "Height (cm)",
y = NULL,
size = "Species"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
starwars[1:5, c("height", "name", "species")]
data <- starwars[1:5, c("name", "height", "species")]
data
ggplot(data) +
geom_point(aes(
x = height,
y = name,
size = species
)) +
labs(
title = "Height of selected Star Wars characters"
x = "Height (cm)",
data <- starwars[1:5, c("name", "height", "species")]
data
ggplot(data) +
geom_point(aes(
x = height,
y = name,
size = species
)) +
labs(
title = "Height of selected Star Wars characters",
x = "Height (cm)",
y = NULL,
size = "Species"
)
data <- starwars[1:5, c("name", "height", "species")]
data
ggplot(data) +
geom_point(aes(
x = height,
y = name,
size = species
)) +
labs(
title = "Height of selected Star Wars characters",
x = "Height (cm)",
y = NULL,
size = "Species"
)
ggplot(data) +
geom_point(aes(
x = height,
y = name,
size = species
)) +
labs(
title = "Height of selected Star Wars characters",
x = "Height (cm)",
y = NULL,
size = "Species"
) +
scale_x_continuous(limits = c(0, NA))
latin_america_pop <- data.frame(
Country = c("Brazil", "Mexico", "Colombia", "Argentina", "Peru",
"Venezuela", "Chile", "Guatemala", "Ecuador", "Bolivia",
"Cuba", "Dominican Republic", "Honduras", "Paraguay",
"El Salvador", "Nicaragua", "Costa Rica", "Puerto Rico",
"Panama", "Uruguay", "Jamaica", "Trinidad and Tobago",
"Guyana", "Suriname", "Belize", "Barbados", "Saint Lucia",
"Grenada", "Saint Vincent and the Grenadines", "Antigua and Barbuda",
"Saint Kitts and Nevis", "Falkland Islands"),
Population_2021 = c(213000000, 126000000, 51000000, 45000000, 33000000,
28000000, 19000000, 18000000, 17000000, 11000000,
11000000, 11000000, 10000000, 7000000, 6000000,
6000000, 5000000, 3000000, 4000000, 3500000,
3000000, 1400000, 780000, 590000, 400000, 290000,
180000, 110000, 110000, 97000, 53000, 3500)
)
pie(latin_america_pop$Population_2021)
pie(latin_america_pop$Population_2021, labels = latin_america_pop$Country)
latin_america_pop
latin_america_pop$Population_2021 <- latin_america_pop$Population_2021/1000000
latin_america_pop
data()
band_instruments
band_instruments2
band_members
islands
a <- islands
AirPassengers
rivers
pop <- data.frame(
countries = c("Brazil", "Mexico", "Colombia", "Argentina", "Peru"),
pop       = c(213000000, 126000000, 51000000, 45000000, 33000000)
)
print(pop)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) + geom_col()
ggplot(pop, aes(x = countries, y = pop, fill = pop)) + geom_col()
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) + geom_col() + geom_point()
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, size = pop)) + geom_col() + geom_point()
plot_pop
install.packages("rayrender")
install.packages("rayrender")
install.packages("terra")
devtools::install_github("tylermorganwall/rayshader")
library(rayshader)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library(tidyverse)
library(rayshader)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, size = pop)) + geom_rect() + geom_point()
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, size = pop)) + geom_raster() + geom_point()
plot_pop
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, size = pop)) + geom_raster()
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, size = pop)) + geom_tile()
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) + geom_tile()
plot_pop
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
Sys.sleep(0.2)
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) + geom_tile() +
scale_fill_manual(values = c(0, NA))
plot_pop
plot_gg(plot_pop, width = 8, height = 8, raytrace = FALSE, preview = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) +
geom_tile()
plot_pop
plot_gg(plot_pop, width = 8, height = 8, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 8, height = 8, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 8, height = 8, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
plot_gg(plot_pop, width = 8, height = 8, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 8, height = 8, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
Sys.sleep(0.2)
render_snapshot(clear = TRUE)
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 500,
zoom = 1, theta = 10, phi = 30, windowsize = c(800, 800))
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) +
geom_tile(width = 10, height = 10)
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) +
geom_tile(width = 1000000, height = 1000000)
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop)) +
geom_tile()
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 500,
zoom = 0.5, theta = 10, phi = 30, windowsize = c(800, 800))
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, color = pop)) +
geom_tile()
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.5, theta = 10, phi = 30, windowsize = c(800, 800))
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.5, theta = 10, phi = 30, windowsize = c(800, 800))
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, fill = pop, color = pop)) +
geom_tile()
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.5, theta = 10, phi = 30, windowsize = c(1000, 1000))
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.5, theta = 10, phi = 30, windowsize = c(1000, 1000))
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, color = pop)) +
geom_point() +
scale_color_continuous(limits = c(0, NA))
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, color = pop)) +
geom_point() +
scale_color_continuous(limits = c(0, NA))
plot_pop
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.5, theta = 10, phi = 30, windowsize = c(1000, 1000))
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, color = pop, size = pop)) +
geom_point() +
scale_color_continuous(limits = c(0, NA))
plot_pop
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.6, theta = 10, phi = 30, windowsize = c(600, 600))
render_snapshot(clear = TRUE)
plot_pop <- ggplot(pop, aes(x = countries, y = pop, color = pop)) +
geom_point(size = 5) +
scale_color_continuous(limits = c(0, NA))
plot_pop
plot_pop <- ggplot(pop, aes(x = countries, y = pop, color = pop)) +
geom_point(size = 10) +
scale_color_continuous(limits = c(0, NA))
plot_pop
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 400,
zoom = 0.6, theta = 10, phi = 30, windowsize = c(600, 600))
render_snapshot(clear = TRUE)
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, raytrace = FALSE, preview = TRUE)
plot_gg(plot_pop, width = 5, height = 5, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30, windowsize = c(800, 800))
render_snapshot(clear = TRUE)
library(tidyverse)
library(sf)
library(geojsonsf)
library(rmapshaper)
library(geobr)
# dados daqui:
# http://dados.prefeitura.sp.gov.br/pt_PT/dataset/distritos/resource/9e75c2f7-5729-4398-8a83-b4640f072b5d
sp <- sf::read_sf('LAYER_DISTRITO')
simple_sp <- rmapshaper::ms_simplify(sp)
sp_wgs84 <- sf::st_transform(simple_sp, 4326)
ggplot(sp_wgs84) + geom_sf()
View(sp)
favelas <- read.csv("favelas-distritos.csv")
View(favelas)
nomes_distritos <- sp$NOME_DIST
nomes_distritos <- sp %>%
select(NOME_DIST) %>%
arrange()
View(nomes_distritos)
nomes_distritos <- sp %>%
select(NOME_DIST) %>%
arrange(NOME_DIST)
View(nomes_distritos)
nomes_distritos <- sp %>%
select(NOME_DIST) %>%
arrange(NOME_DIST) %>%
unlist()
nomes_distritos <- sp %>%
select(NOME_DIST) %>%
arrange(NOME_DIST) %>%
.$NOME_DIST
favelas$NOME_DIST <- nomes_distritos
tolower(iconv(favelas$regiao, to = "ASCII//TRANSLIT")))
tolower(iconv(favelas$regiao, to = "ASCII//TRANSLIT"))
sp_data <- sp %>% left_join(favelas)
View(sp_data)
simple_sp <- rmapshaper::ms_simplify(sp_data)
sp_wgs84 <- sf::st_transform(simple_sp, 4326)
ggplot(sp_wgs84) + geom_sf()
sp_geo <- geojsonsf::sf_geojson(sp_wgs84, simplify = TRUE, digits = 6)
write_file(sp_geo, 'dados_distritos.json')
ggplot(simple_sp) + geom_sf(fill = ndf/ndp)
ggplot(simple_sp) + geom_sf(aes(fill = ndf/ndp))
ggplot(simple_sp) + geom_hist(aes(y = ndf/ndp))
ggplot(simple_sp) + geom_histogram(aes(y = ndf/ndp))
favelas$cat <- cut(favelas$ndf/favelas$ndp, c(0, 0.1, 0.2, 0.3, 1), c("Até 10%", "Entre 10% e 20%", "Entre 20% e 30%", "Acima de 30%"))
favelas$pct <- favelas$ndf/favelas$ndp
favelas$pct <- round(100*favelas$ndf/favelas$ndp,2)
favelas$cat <- cut(favelas$ndf/favelas$ndp, c(-Inf, 0.1, 0.2, 0.3, 1), c("Até 10%", "Entre 10% e 20%", "Entre 20% e 30%", "Acima de 30%"))
# dados daqui:
# http://dados.prefeitura.sp.gov.br/pt_PT/dataset/distritos/resource/9e75c2f7-5729-4398-8a83-b4640f072b5d
sp <- sf::read_sf('LAYER_DISTRITO')
favelas <- read.csv("favelas-distritos.csv")
nomes_distritos <- sp %>%
select(NOME_DIST) %>%
arrange(NOME_DIST) %>%
.$NOME_DIST
favelas$NOME_DIST <- nomes_distritos
favelas$pct <- round(100*favelas$ndf/favelas$ndp,2)
favelas$cat <- cut(favelas$ndf/favelas$ndp, c(-Inf, 0.1, 0.2, 0.3, 1), c("Até 10%", "Entre 10% e 20%", "Entre 20% e 30%", "Acima de 30%"))
sp_data <- sp %>% left_join(favelas)
simple_sp <- rmapshaper::ms_simplify(sp_data)
sp_wgs84 <- sf::st_transform(simple_sp, 4326)
ggplot(sp_wgs84) + geom_sf()
sp_geo <- geojsonsf::sf_geojson(sp_wgs84, simplify = TRUE, digits = 6)
write_file(sp_geo, 'dados_distritos.json')
favelas$cat <- cut(favelas$ndf/favelas$ndp, c(-Inf, 0, 0.1, 0.2, 0.3, 1), c("Sem favelas", "Até 10%", "Entre 10% e 20%", "Entre 20% e 30%", "Acima de 30%"))
sp_data <- sp %>% left_join(favelas)
simple_sp <- rmapshaper::ms_simplify(sp_data)
sp_wgs84 <- sf::st_transform(simple_sp, 4326)
sp_geo <- geojsonsf::sf_geojson(sp_wgs84, simplify = TRUE, digits = 6)
write_file(sp_geo, 'dados_distritos.json')
